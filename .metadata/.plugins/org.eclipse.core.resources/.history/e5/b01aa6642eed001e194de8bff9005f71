package application;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.CornerRadii;
import javafx.stage.FileChooser;

public class Main extends Application {
    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) {
        try {
            primaryStage.setTitle("Loader Application");

            //create a gridpane layout
            GridPane grid = new GridPane();

            //sets spacing AROUND the entire grid
            grid.setPadding(new Insets(10, 10, 10, 10));

            //sets vertical spacing BETWEEN rows and columns 
            grid.setVgap(20);
            //sets horizontal spacing BETWEEN rows and columns 
            grid.setHgap(10);

            // Database login
            Label login = new Label("Database Login");
            GridPane.setConstraints(login, 0, 0);

            Label user = new Label("Username: ");
            GridPane.setConstraints(user, 0, 1);

            TextField name = new TextField();
            name.setPromptText("Username");
            GridPane.setConstraints(name, 1, 1);

            Label password = new Label("Password: ");
            GridPane.setConstraints(password, 0, 2);

            PasswordField passwordField = new PasswordField();
            passwordField.setPromptText("Password");
            GridPane.setConstraints(passwordField, 1, 2);

            Label ipLabel = new Label("IP Address: ");
            GridPane.setConstraints(ipLabel, 0, 3);

            TextField ipField = new TextField();
            ipField.setPromptText("IP Address");
            GridPane.setConstraints(ipField, 1, 3);

            Button submitBtn = new Button("Log In");
            GridPane.setConstraints(submitBtn, 1, 4);

            // File upload
            Label upload = new Label("Upload Data");
            GridPane.setConstraints(upload, 3, 0);

            Label file = new Label("File Name: ");
            GridPane.setConstraints(file, 3, 1);

            TextField fileName = new TextField();
            fileName.setPromptText("Name of Data");
            GridPane.setConstraints(fileName, 4, 1);

            Label uploadFile = new Label("Upload File: ");
            GridPane.setConstraints(uploadFile, 3, 2);

            Button fileChooserButton = new Button("Choose File");
            GridPane.setConstraints(fileChooserButton, 4, 2);

            fileChooserButton.setOnAction(e -> {
                FileChooser fileChooser = new FileChooser();
                fileChooser.setTitle("Open Data File");
                fileChooser.showOpenDialog(primaryStage);
            });

            Button uploadBtn = new Button("Upload");
            GridPane.setConstraints(uploadBtn, 4, 3);

            // Table that shows database connections
            TableView<Data> table = new TableView<>();

            TableColumn<Data, String> nameColumn = new TableColumn<>("File Name");
            nameColumn.setMinWidth(200);
            nameColumn.setCellValueFactory(new PropertyValueFactory<>("name"));

            table.getColumns().addAll(nameColumn);
            table.setBackground(new Background(new BackgroundFill(Color.RED, CornerRadii.EMPTY, Insets.EMPTY)));

            // Connect button
            Button connectBtn = new Button("Connect");
            connectBtn.setMinWidth(150);
            connectBtn.setMinHeight(40);

            // VBox layout
            VBox layout = new VBox(10);
            layout.getChildren().addAll(grid, table, connectBtn);
            layout.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, CornerRadii.EMPTY, Insets.EMPTY)));

            // Scene setup
            Scene scene = new Scene(layout, 800, 600);
            primaryStage.setScene(scene);
            primaryStage.show();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Dummy Data class for the table
    public static class Data {
        // Assuming you have a simple String property for demonstration
        private String name;

        public Data(String name) {
            this.setName(name);
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }
    }
}
