package application;
	

import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.geometry.Insets;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;

public class Main extends Application {
	public static void main(String[] args) 
	{
		launch(args);
	}
	
	@Override
	public void start(Stage primaryStage) 
	{
		try 
		{
			primaryStage.setTitle("Loader Application");
			
			//create a gridpane layout
			GridPane grid = new GridPane();
			
			//sets spacing AROUND the entire grid
			grid.setPadding(new Insets(10, 10, 10, 10));
			
			//sets vertical spacing BETWEEN rows and columns 
			grid.setVgap(20);
			//sets horizontal spacing BETWEEN rows and columns 
			grid.setHgap(10);
			
			/*
			 * Database login
			 * prompt user for username and password 
			 * for MySQL login to create a connection
			 * 
			 * */
			
			//create a label
			Label login = new Label("Database Login");
			//set label to position 0,0 (column, row)
			GridPane.setConstraints(login, 1, 0);
			
			//create a label
			Label user = new Label("Username: ");
			//set label to position 0,0 (column, row)
			GridPane.setConstraints(user, 0, 1);	//setConstraints is the same as .setTop, .setRight, etc.
			
			//create a text field
			TextField name = new TextField("Database username");
			//set text field position to 1, 0 (column, row)
			GridPane.setConstraints(name, 1, 1);
			
			//pass word label and text field
			Label password = new Label("Password: ");
			GridPane.setConstraints(password, 0, 2);
			
			//password field is a text field that does not show you what you are typing
			PasswordField passwordField = new PasswordField();
			passwordField.setPromptText("Password");
			GridPane.setConstraints(passwordField, 1, 2);
			
			Button submitBtn = new Button("Log In");
			GridPane.setConstraints(submitBtn, 1, 3);
			
			/*
			 * File upload
			 * prompts user for a name of the file
			 * and a textbox for them to insert the link to the file
			 * or add a button for them to select the file from computer
			 * 
			 * */
			//create a label
			Label upload = new Label("Upload Data");
			//set label to position 0,0 (column, row)
			GridPane.setConstraints(upload, 4, 0);
			
			//create a label
			Label file = new Label("File Name: ");
			//set label to position 0,0 (column, row)
			GridPane.setConstraints(file, 3, 1);	//setConstraints is the same as .setTop, .setRight, etc.
			
			//create a text field
			TextField fileName = new TextField("Name of Data");
			//set text field position to 1, 0 (column, row)
			GridPane.setConstraints(fileName, 4, 1);
			
			//pass word label and text field
			Label uploadFile = new Label("Upload File: ");
			GridPane.setConstraints(uploadFile, 3, 2);
			
			//create a text field
			TextField fileLink = new TextField("File Link");
			//set text field position to 1, 0 (column, row)
			GridPane.setConstraints(fileLink, 4, 2);
			
			Button uploadBtn = new Button("Upload");
			GridPane.setConstraints(uploadBtn, 4, 3);
			
			
			//add database login, and file upload to grid layout.
			grid.getChildren().addAll(user, name, password, passwordField, submitBtn, file, fileName, uploadFile, fileLink, uploadBtn, login, upload);
			
			/*
			 * Table that shows all database connections 
			 * users can choose from
			 * connections are created when files are uploaded and added to the table
			 * */
			
			//declare a table of type data that is another class name
			TableView<Data> table = new TableView<>();
			
			//add columns to table
			
			//add first column for name
			//<reference data class, and have a column of strings> - create name of column anything can be there
			TableColumn<Data, String> nameColumn = new TableColumn<>("File Name");
			nameColumn.setMinWidth(150);
			//name is coming from data, referencing a variable name in the data class (must be same name)
			nameColumn.setCellValueFactory(new PropertyValueFactory<>("name"));
						
			//add columns to table
			table.getColumns().addAll(nameColumn);
			
			/*
			 * Create a button for users to connect
			 * to the ArcGIS application
			 **/
			Button connectBtn = new Button("Connect");
			
			/*
			 * Create a VBox to store both the grid layout 
			 * and the table layouts
			 * */
			
			VBox layout = new VBox();
			layout.getChildren().addAll(grid, table, connectBtn);
			//add layout to scene
			Scene scene = new Scene(layout,550,550);
			primaryStage.setScene(scene);
			primaryStage.show();
		} 
		catch(Exception e) 
		{
			e.printStackTrace();
		}
	}
	
}
